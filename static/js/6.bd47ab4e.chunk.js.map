{"version":3,"sources":["Components/CategoryBar/CategoryBar.js","Views/Awards/Awards.js"],"names":["CategoryBar","cats","onChange","checkChecked","className","Group","style","width","map","p","display","value","connect","state","polls","awards","english","fetchAwards","useState","selectedTags","setSelectedTags","expiredAwards","setExpiredAwards","type3","setType3","type3Data","setType3Data","comm","setComm","TabPane","Tabs","useEffect","fetchExpiredAwards","window","scrollTo","page","a","axios","get","response","responseJSON","data","console","log","callback","key","getExpiryString","expiryTime","lifeEndTime","moment","now","duration","diff","difference","Math","floor","asDays","minDiff","asMinutes","asHours","getExpiryString1","_data","hours","minutes","fetchComments","_id","then","res","payload","catch","err","PollView","type","type2","useData","length","filter","l","includes","lifeSpan","margin","hidden","onClick","isSubcategory","setIt","icons","title","Object","keys","heading","footer","visible","onOk","onCancel","tab","gridTemplateColumns","justifyItems","gridGap","nominations","tyle","jurys","id","m","src","user","avatar","alt","userName","textTransform","award","name","comment","checkedValues","item","bool","indexOf","backgroundColor","color","catspa","size","defaultActiveKey","checkLength"],"mappings":"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","file":"static/js/6.bd47ab4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Checkbox} from 'antd'\r\n\r\nconst CategoryBar = ({cats,onChange,checkChecked}) => {\r\n  return (\r\n    <div className='section-news-left--tags  news-tags'>\r\n    <Checkbox.Group\r\n    className='tags'\r\n    style={{ width: '100%' }}\r\n    onChange={onChange}\r\n  >\r\n    {cats.map((p) => (\r\n      <label className=\"cat cur\" style={checkChecked(p)}>\r\n        {p}\r\n        <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\r\n      </label>\r\n    ))}\r\n  </Checkbox.Group>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CategoryBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar';\r\nimport { cats,catspa } from '../../Components/icons/Icons';\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios';\r\nimport moment from 'moment';\r\nimport PollCard from '../../Components/Polls/PollCard';\r\nimport { icons } from '../../Components/icons/Icons';\r\nimport { fetchAwards } from '../../Actions/AwardsAction';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard';\r\nimport JuryCard from '../../Components/Cards/JuryCard';\r\nimport AwardResult from '../../Components/Result/AwardResult';\r\n\r\nconst Awards = ({ fetchAwards, awards: { awards },english:{english} } ) => {\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [expiredAwards, setExpiredAwards] = useState({});\r\n  const [type3, setType3] = useState(false);\r\n  const [type3Data, setType3Data] = useState({});\r\n  const[comm,setComm]=useState([])\r\n\r\n  const { TabPane } = Tabs;\r\n  useEffect(() => {\r\n    fetchExpiredAwards();\r\n    fetchAwards();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetchExpiredAwards();\r\n  // }, [selectedTags]);\r\n\r\n  const fetchExpiredAwards = async (page) => {\r\n    try {\r\n      const response = await axios.get(\r\n        '/award/fetchAwardsAndCategories?mode=expired'\r\n      );\r\n      const responseJSON = response.data;\r\n      setExpiredAwards(responseJSON);\r\n      console.log(responseJSON, 'expired awards');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  function onChange(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTags(checkedValues);\r\n  }\r\n  const checkChecked = (item) => {\r\n    console.log(selectedTags);\r\n    const bool = selectedTags.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n      };\r\n    }\r\n  };\r\n\r\n  const getExpiryString = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff;\r\n  };\r\n\r\n  const getExpiryString1 = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    console.log(duration, 'duration');\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff < 0\r\n      ? 'show has expired'\r\n      : `${duration._data.hours} hours ${duration._data.minutes} minutes left!!`;\r\n  };\r\n  const handleOk = () => {\r\n    setType3(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setType3(false);\r\n  };\r\n  const setIt = (p) => {\r\n    console.log(p);\r\n    if (p.isSubcategory) {\r\n      setType3(true);\r\n      setType3Data(p);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    fetchComments()\r\n  },[type3Data])\r\n  const checkLength = (data, type) => {\r\n    let useData = [];\r\n\r\n    if (type === 'awards') {\r\n      if (selectedTags.length > 0) {\r\n        useData =\r\n          data &&\r\n          data.length > 0 &&\r\n          data\r\n            .filter((l) => {\r\n              return selectedTags.includes(l.type[0]);\r\n            })\r\n            .filter((p) => {\r\n              return getExpiryString(p.lifeSpan) > 0;\r\n            });\r\n      }\r\n      else {\r\n        useData =\r\n        data &&\r\n        data.length > 0 &&\r\n        data.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) > 0;\r\n        });\r\n      }\r\n     \r\n      return useData && useData.length;\r\n    }\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    await axios\r\n      .get(`award/audienceComments?id=${type3Data && type3Data._id}`)\r\n      .then((res) => {\r\n        console.log(res, 'COMMENTS');\r\n        setComm(res.data.payload);\r\n      }).catch(err => {\r\n        console.log(err,'error in comments')\r\n      })\r\n  };\r\n  const PollView = (data, type, type2) => {\r\n    let useData = [];\r\n    if (type2 === 'awards') {\r\n      if (type === 'active') {\r\n        if (data && data.length > 0) {\r\n          if (selectedTags.length > 0) {\r\n            useData =\r\n              data &&\r\n              data.length > 0 &&\r\n              data\r\n                .filter((l) => {\r\n                  return selectedTags.includes(l.type[0]);\r\n                })\r\n                .filter((p) => {\r\n                  return getExpiryString(p.lifeSpan) > 0;\r\n                });\r\n          } else {\r\n            useData =\r\n              data &&\r\n              data.length > 0 &&\r\n              data.filter((p) => {\r\n                return getExpiryString(p.lifeSpan) > 0;\r\n              });\r\n            console.log(useData, 'use');\r\n          }\r\n        }\r\n      } else if (type === 'expired') {\r\n        if (selectedTags.length > 0) {\r\n          useData =\r\n            data &&\r\n            data.length > 0 &&\r\n            data\r\n              .filter((l) => {\r\n                return selectedTags.includes(l.type[0]);\r\n              })\r\n              .filter((p) => {\r\n                return getExpiryString(p.lifeSpan) < 0;\r\n              });\r\n        } else {\r\n          useData =\r\n            data &&\r\n            data.length > 0 &&\r\n            data.filter((p) => {\r\n              return getExpiryString(p.lifeSpan) < 0;\r\n            });\r\n          console.log(useData);\r\n        }\r\n      }\r\n      console.log(useData, 'usedata');\r\n      console.log(awards,'awwwwww');\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={{ margin: '1.5rem 0' }}>\r\n          {/*useData &&<span>{useData.length + ' ' + type + ' ' + type2}</span>*/}\r\n        </div>\r\n        <div className='pollCont'>\r\n          {useData &&\r\n            useData.map(\r\n              (p) =>\r\n                p.hidden === false && (\r\n                  <div onClick={() => setIt(p)}>\r\n                    <PollCard\r\n                      setType3Data={setType3Data}\r\n                      type3={type3}\r\n                      setType3={setType3}\r\n                      icons={icons}\r\n                      type2={type2}\r\n                      english={english}\r\n                      p={p}\r\n                      getExpiryString1={getExpiryString1}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className='poll-box'>\r\n      <Modal\r\n        title={\r\n          type3Data && Object.keys(type3Data).length > 0 && type3Data.heading\r\n        }\r\n        footer={null}  \r\n        visible={type3}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {/* <h3>{type3Data&& Object.keys(type3Data).length>0 && type3Data.heading}</h3>*/}\r\n        <Tabs onChange={callback} type='card'>\r\n          <TabPane tab='Nominees' key='1'>\r\n            <div\r\n              style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'repeat(auto-fit,minmax(200px,1fr))',\r\n                justifyItems: 'center',\r\n                gridGap: '1.5rem',\r\n              }}\r\n            >\r\n              {type3Data &&\r\n                Object.keys(type3Data).length > 0 &&\r\n                type3Data.nominations.map((p) => <NomineeCard p={p} />)}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab='Jury' key='2'>\r\n            <div\r\n              tyle={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n                justifyItems: 'center',\r\n                gridGap: '1.5rem',\r\n              }}\r\n            >\r\n              {type3Data &&\r\n                Object.keys(type3Data).length > 0 &&\r\n                type3Data.jurys.map((p) => <JuryCard p={p} />)}\r\n            </div>\r\n          </TabPane>\r\n\r\n          <TabPane tab='Results' key='3'>\r\n            <AwardResult\r\n              id={\r\n                type3Data && Object.keys(type3Data).length > 0 && type3Data._id\r\n              }\r\n            />\r\n          </TabPane>\r\n          <TabPane tab='Comments' key='4'>\r\n          {comm.length > 0 &&\r\n            comm.map((m) => (\r\n              <div className=\"comm-cont\">\r\n                <div>\r\n                  <img style={{ width: '50px' }} src={m.user.avatar} alt='' />\r\n                </div>\r\n                <div>\r\n                <p>\r\n                  @{m.user.userName} Voted{' '}\r\n                  <span style={{ textTransform: 'capitalize' }}>\r\n                    {m.award.nominations.name}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment-1\">{m.comment}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n      <div>\r\n        {/*<h1>Awards</h1>*/}\r\n        <div>\r\n          <CategoryBar\r\n            onChange={onChange}\r\n            checkChecked={checkChecked}\r\n            cats={catspa}\r\n          />\r\n          <Tabs\r\n          size={'large'}\r\n            defaultActiveKey={checkLength(awards, 'awards') === 0 ? '2' : '1'}\r\n            onChange={callback}\r\n            type='card'\r\n          >\r\n            <TabPane tab='Active' key='1'>\r\n              {PollView(awards,'active','awards')}\r\n            </TabPane>\r\n            <TabPane tab='Expired' key='2'>\r\n              {PollView(expiredAwards.payload, 'expired', 'awards')}\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  polls: state.polls,\r\n  awards: state.awards,\r\n  english:state.english\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchAwards,\r\n})(Awards);\r\n"],"sourceRoot":""}