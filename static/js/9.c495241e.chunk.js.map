{"version":3,"sources":["Views/Awards/Award.js"],"names":["Award","match","TabPane","Tabs","useState","subCat","setSubCat","comm","setComm","sh","setSh","showInfo","setShowInfo","useEffect","fetchAward","fetchComments","fetchShowInfo","window","scrollTo","a","axios","get","params","catId","then","res","console","log","data","payload","awardId","catch","err","award","filter","c","_id","show","showId","isAward","getExpiryString1","expiryTime","lifeEndTime","moment","now","duration","diff","difference","Math","floor","asDays","minDiff","asMinutes","asHours","className","isModalVisible","setIsModalVisible","style","margin","length","heading","onChange","key","type","tab","padding","nominations","map","p","display","gridTemplateColumns","justifyItems","gridGap","lifeSpan","jurys","format","id","m","width","src","user","avatar","alt","userName","textTransform","name","comment","onClick","color"],"mappings":"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","file":"static/js/9.c495241e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard';\r\nimport JuryCard from '../../Components/Cards/JuryCard';\r\nimport AwardResult from '../../Components/Result/AwardResult';\r\nimport moment from 'moment';\r\nimport Modal from '../../Components/Modal/Modal'\r\n\r\nconst Award = ({ match }) => {\r\n  const { TabPane } = Tabs;\r\n\r\n  const [subCat, setSubCat] = useState([]);\r\n  const [comm, setComm] = useState([]);\r\n  const [sh,setSh]=useState(false)\r\n  const [showInfo,setShowInfo] = useState([]);\r\n  useEffect(() => {\r\n    fetchAward();\r\n    fetchComments();\r\n    fetchShowInfo();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const fetchAward = async () => {\r\n    await axios\r\n      .get(`award/awardList?categoryId=${match.params.catId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubCat(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const fetchShow = async () => {\r\n    await axios\r\n      .get(`award/awardList?categoryId=${match.params.catId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubCat(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    await axios\r\n      .get(`award/audienceComments?id=${match.params.awardId}`)\r\n      .then((res) => {\r\n        console.log(res, 'COMMENTS');\r\n        setComm(res.data.payload);\r\n      }).catch(err=>{\r\n        console.log(err,'Error in award');\r\n      });\r\n  };\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  const award = () => {\r\n    const arr = subCat.filter((c) => {\r\n      return c._id === match.params.awardId;\r\n    });\r\n    return arr;\r\n  };\r\n  console.log(award(), 'aww');\r\n\r\n  const fetchShowInfo = async () => {\r\n    await axios\r\n      .get(`/award/fetchAwardsAndCategories`)\r\n      .then((res) => {\r\n        console.log('fetchShowInfo Called');\r\n        setShowInfo(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const show = () => {\r\n    const arr = showInfo.filter((c) => {\r\n      return c._id === match.params.showId && c.isAward === true;\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  console.log(show()[0],'show info');\r\n\r\n  const getExpiryString1 = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    console.log(duration, 'duration');\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff < 0 ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div className='box'>\r\n    <Modal isModalVisible={sh} setIsModalVisible={setSh}/>\r\n      <h2 style={{ margin: '2rem 0' }}>\r\n        {award() && award().length > 0 && award()[0].heading}\r\n      </h2>\r\n      <Tabs onChange={callback} type='card'>\r\n        <TabPane tab='Nominees' key='1'>\r\n          <div className='nom-div' style={{padding:'5rem 10rem'}}>\r\n            {award() &&\r\n              award().length > 0 &&\r\n              award()[0].nominations.map((p) => <NomineeCard p={p} />)}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab='Jury' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n              justifyItems: 'center',\r\n              gridGap: '1.5rem',\r\n            }}\r\n          >\r\n            {show() && show().length > 0 ? getExpiryString1(show()[0].lifeSpan) ? award() &&\r\n              award().length > 0 &&\r\n              award()[0].jurys.map((p) => <JuryCard p={p} />) : <div>Jury Comments will be disclosed on {moment(show()[0].lifeSpan).format('MMMM Do YYYY')}.</div> : null }\r\n          </div>\r\n        </TabPane>\r\n\r\n        {award() &&\r\n          award().length > 0 && (\r\n            <TabPane tab='Results' key='3'>\r\n              {show() && show().length > 0 ? getExpiryString1(show()[0].lifeSpan) ?\r\n                <AwardResult\r\n                  id={award() && award().length > 0 && award()[0]._id}\r\n                /> : <div style={{\r\n                  display: 'grid',\r\n                  gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n                  justifyItems: 'center',\r\n                  gridGap: '1.5rem',\r\n                }} >Results will be declared on {moment(show()[0].lifeSpan).format('MMMM Do YYYY')}.</div> : null}\r\n            </TabPane>\r\n          )}\r\n\r\n        <TabPane tab='Comments' key='4'>\r\n          {comm.length > 0 &&\r\n            comm.map((m) => (\r\n              <div className=\"comm-cont\">\r\n                <div>\r\n                  <img style={{ width: '50px' }} src={m.user.avatar} alt='' />\r\n                </div>\r\n                <div>\r\n                <p>\r\n                  @{m.user.userName} Voted{' '}\r\n                  <span style={{ textTransform: 'capitalize' }}>\r\n                    {m.award.nominations.name}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment-1\">{m.comment}</p>\r\n                </div>\r\n              </div>\r\n              \r\n            ))}\r\n            <div onClick={()=>setSh(true)} className='comment'>\r\n            <p style={{color:'grey'}}>Add comments.....</p>\r\n              </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Award;\r\n"],"sourceRoot":""}